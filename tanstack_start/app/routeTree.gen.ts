/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as IndexImport } from './routes/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as DashboardProfileImport } from './routes/dashboard/profile'
import { Route as DashboardRoomsIndexImport } from './routes/dashboard/rooms/index'
import { Route as DashboardBookingsIndexImport } from './routes/dashboard/bookings/index'
import { Route as DashboardBookingRequestsIndexImport } from './routes/dashboard/booking-requests/index'
import { Route as DashboardRoomsRoomIdImport } from './routes/dashboard/rooms/$roomId'
import { Route as DashboardBookingsBookingIdViewImport } from './routes/dashboard/bookings/$bookingId.view'
import { Route as DashboardBookingRequestsBookingIdReviewImport } from './routes/dashboard/booking-requests/$bookingId.review'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardProfileRoute = DashboardProfileImport.update({
  id: '/dashboard/profile',
  path: '/dashboard/profile',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoomsIndexRoute = DashboardRoomsIndexImport.update({
  id: '/dashboard/rooms/',
  path: '/dashboard/rooms/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardBookingsIndexRoute = DashboardBookingsIndexImport.update({
  id: '/dashboard/bookings/',
  path: '/dashboard/bookings/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardBookingRequestsIndexRoute =
  DashboardBookingRequestsIndexImport.update({
    id: '/dashboard/booking-requests/',
    path: '/dashboard/booking-requests/',
    getParentRoute: () => rootRoute,
  } as any)

const DashboardRoomsRoomIdRoute = DashboardRoomsRoomIdImport.update({
  id: '/dashboard/rooms/$roomId',
  path: '/dashboard/rooms/$roomId',
  getParentRoute: () => rootRoute,
} as any)

const DashboardBookingsBookingIdViewRoute =
  DashboardBookingsBookingIdViewImport.update({
    id: '/dashboard/bookings/$bookingId/view',
    path: '/dashboard/bookings/$bookingId/view',
    getParentRoute: () => rootRoute,
  } as any)

const DashboardBookingRequestsBookingIdReviewRoute =
  DashboardBookingRequestsBookingIdReviewImport.update({
    id: '/dashboard/booking-requests/$bookingId/review',
    path: '/dashboard/booking-requests/$bookingId/review',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/profile': {
      id: '/dashboard/profile'
      path: '/dashboard/profile'
      fullPath: '/dashboard/profile'
      preLoaderRoute: typeof DashboardProfileImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/rooms/$roomId': {
      id: '/dashboard/rooms/$roomId'
      path: '/dashboard/rooms/$roomId'
      fullPath: '/dashboard/rooms/$roomId'
      preLoaderRoute: typeof DashboardRoomsRoomIdImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/booking-requests/': {
      id: '/dashboard/booking-requests/'
      path: '/dashboard/booking-requests'
      fullPath: '/dashboard/booking-requests'
      preLoaderRoute: typeof DashboardBookingRequestsIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/bookings/': {
      id: '/dashboard/bookings/'
      path: '/dashboard/bookings'
      fullPath: '/dashboard/bookings'
      preLoaderRoute: typeof DashboardBookingsIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/rooms/': {
      id: '/dashboard/rooms/'
      path: '/dashboard/rooms'
      fullPath: '/dashboard/rooms'
      preLoaderRoute: typeof DashboardRoomsIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/booking-requests/$bookingId/review': {
      id: '/dashboard/booking-requests/$bookingId/review'
      path: '/dashboard/booking-requests/$bookingId/review'
      fullPath: '/dashboard/booking-requests/$bookingId/review'
      preLoaderRoute: typeof DashboardBookingRequestsBookingIdReviewImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/bookings/$bookingId/view': {
      id: '/dashboard/bookings/$bookingId/view'
      path: '/dashboard/bookings/$bookingId/view'
      fullPath: '/dashboard/bookings/$bookingId/view'
      preLoaderRoute: typeof DashboardBookingsBookingIdViewImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/dashboard/profile': typeof DashboardProfileRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/rooms/$roomId': typeof DashboardRoomsRoomIdRoute
  '/dashboard/booking-requests': typeof DashboardBookingRequestsIndexRoute
  '/dashboard/bookings': typeof DashboardBookingsIndexRoute
  '/dashboard/rooms': typeof DashboardRoomsIndexRoute
  '/dashboard/booking-requests/$bookingId/review': typeof DashboardBookingRequestsBookingIdReviewRoute
  '/dashboard/bookings/$bookingId/view': typeof DashboardBookingsBookingIdViewRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/dashboard/profile': typeof DashboardProfileRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/rooms/$roomId': typeof DashboardRoomsRoomIdRoute
  '/dashboard/booking-requests': typeof DashboardBookingRequestsIndexRoute
  '/dashboard/bookings': typeof DashboardBookingsIndexRoute
  '/dashboard/rooms': typeof DashboardRoomsIndexRoute
  '/dashboard/booking-requests/$bookingId/review': typeof DashboardBookingRequestsBookingIdReviewRoute
  '/dashboard/bookings/$bookingId/view': typeof DashboardBookingsBookingIdViewRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/dashboard/profile': typeof DashboardProfileRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/rooms/$roomId': typeof DashboardRoomsRoomIdRoute
  '/dashboard/booking-requests/': typeof DashboardBookingRequestsIndexRoute
  '/dashboard/bookings/': typeof DashboardBookingsIndexRoute
  '/dashboard/rooms/': typeof DashboardRoomsIndexRoute
  '/dashboard/booking-requests/$bookingId/review': typeof DashboardBookingRequestsBookingIdReviewRoute
  '/dashboard/bookings/$bookingId/view': typeof DashboardBookingsBookingIdViewRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/dashboard/profile'
    | '/dashboard'
    | '/dashboard/rooms/$roomId'
    | '/dashboard/booking-requests'
    | '/dashboard/bookings'
    | '/dashboard/rooms'
    | '/dashboard/booking-requests/$bookingId/review'
    | '/dashboard/bookings/$bookingId/view'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/dashboard/profile'
    | '/dashboard'
    | '/dashboard/rooms/$roomId'
    | '/dashboard/booking-requests'
    | '/dashboard/bookings'
    | '/dashboard/rooms'
    | '/dashboard/booking-requests/$bookingId/review'
    | '/dashboard/bookings/$bookingId/view'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/dashboard/profile'
    | '/dashboard/'
    | '/dashboard/rooms/$roomId'
    | '/dashboard/booking-requests/'
    | '/dashboard/bookings/'
    | '/dashboard/rooms/'
    | '/dashboard/booking-requests/$bookingId/review'
    | '/dashboard/bookings/$bookingId/view'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginRoute: typeof LoginRoute
  DashboardProfileRoute: typeof DashboardProfileRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardRoomsRoomIdRoute: typeof DashboardRoomsRoomIdRoute
  DashboardBookingRequestsIndexRoute: typeof DashboardBookingRequestsIndexRoute
  DashboardBookingsIndexRoute: typeof DashboardBookingsIndexRoute
  DashboardRoomsIndexRoute: typeof DashboardRoomsIndexRoute
  DashboardBookingRequestsBookingIdReviewRoute: typeof DashboardBookingRequestsBookingIdReviewRoute
  DashboardBookingsBookingIdViewRoute: typeof DashboardBookingsBookingIdViewRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginRoute: LoginRoute,
  DashboardProfileRoute: DashboardProfileRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardRoomsRoomIdRoute: DashboardRoomsRoomIdRoute,
  DashboardBookingRequestsIndexRoute: DashboardBookingRequestsIndexRoute,
  DashboardBookingsIndexRoute: DashboardBookingsIndexRoute,
  DashboardRoomsIndexRoute: DashboardRoomsIndexRoute,
  DashboardBookingRequestsBookingIdReviewRoute:
    DashboardBookingRequestsBookingIdReviewRoute,
  DashboardBookingsBookingIdViewRoute: DashboardBookingsBookingIdViewRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/dashboard/profile",
        "/dashboard/",
        "/dashboard/rooms/$roomId",
        "/dashboard/booking-requests/",
        "/dashboard/bookings/",
        "/dashboard/rooms/",
        "/dashboard/booking-requests/$bookingId/review",
        "/dashboard/bookings/$bookingId/view"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/dashboard/profile": {
      "filePath": "dashboard/profile.tsx"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx"
    },
    "/dashboard/rooms/$roomId": {
      "filePath": "dashboard/rooms/$roomId.tsx"
    },
    "/dashboard/booking-requests/": {
      "filePath": "dashboard/booking-requests/index.tsx"
    },
    "/dashboard/bookings/": {
      "filePath": "dashboard/bookings/index.tsx"
    },
    "/dashboard/rooms/": {
      "filePath": "dashboard/rooms/index.tsx"
    },
    "/dashboard/booking-requests/$bookingId/review": {
      "filePath": "dashboard/booking-requests/$bookingId.review.tsx"
    },
    "/dashboard/bookings/$bookingId/view": {
      "filePath": "dashboard/bookings/$bookingId.view.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
